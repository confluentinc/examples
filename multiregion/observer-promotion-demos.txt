Under-Min-Isr:

1. Create /multiregion/config/placement-under-min-isr-promotion.json (/etc/kafka/demo/placement-under-min-isr-promotion.json):

{
    "version": 2,
    "replicas": [
        {
            "count": 2,
            "constraints": {
                "rack": "west"
            }
        }
    ],
    "observers": [
        {
            "count": 2,
            "constraints": {
                "rack": "east"
            }
        }
    ],
    "observerPromotionPolicy":"under-min-isr"
}


2. Create the topic

kafka-topics  --create \
	--bootstrap-server broker-west-1:19091 \
	--topic under-min-isr-promotion \
	--partitions 1 \
	--replica-placement /etc/kafka/demo/placement-under-min-isr-promotion.json \
	--config min.insync.replicas=2

3. Identify the leader

[appuser@broker-west-2 ~]$ kafka-topics --bootstrap-server broker-west-1:19091 --describe --topic under-min-isr-promotion
Topic: under-min-isr-promotion	PartitionCount: 1	ReplicationFactor: 4	Configs: min.insync.replicas=2,confluent.placement.constraints={"observerPromotionPolicy":"under-min-isr","version":2,"replicas":[{"count":2,"constraints":{"rack":"west"}}],"observers":[{"count":2,"constraints":{"rack":"east"}}]}
	Topic: under-min-isr-promotion	Partition: 0	Leader: 2	Replicas: 2,1,4,3	Isr: 2,1	Offline: 	Observers: 4,3

4. Stop the one that isn't the leader

docker-compose stop [if Leader=2 then broker-west-1 else broker-west-2]

[appuser@broker-west-2 ~]$ kafka-topics --bootstrap-server broker-west-2:19092 --describe --topic under-min-isr-promotion
Topic: under-min-isr-promotion	PartitionCount: 1	ReplicationFactor: 4	Configs: min.insync.replicas=2,confluent.placement.constraints={"observerPromotionPolicy":"under-min-isr","version":2,"replicas":[{"count":2,"constraints":{"rack":"west"}}],"observers":[{"count":2,"constraints":{"rack":"east"}}]}
	Topic: under-min-isr-promotion	Partition: 0	Leader: 2	Replicas: 2,1,4,3	Isr: 2,4	Offline: 1	Observers: 4,3

5. Bring the broker back up 

docker-compose up -d broker-west-1

[appuser@broker-west-2 ~]$ kafka-topics --bootstrap-server broker-west-2:19092 --describe --topic under-min-isr-promotion
Topic: under-min-isr-promotion	PartitionCount: 1	ReplicationFactor: 4	Configs: min.insync.replicas=2,confluent.placement.constraints={"observerPromotionPolicy":"under-min-isr","version":2,"replicas":[{"count":2,"constraints":{"rack":"west"}}],"observers":[{"count":2,"constraints":{"rack":"east"}}]}
	Topic: under-min-isr-promotion	Partition: 0	Leader: 2	Replicas: 2,1,4,3	Isr: 2,1	Offline: 	Observers: 4,3


Under-Replicated:

1. Create /multiregion/config/placement-under-replicated-promotion.json (/etc/kafka/demo/placement-under-replicated-promotion.json):

{
  "version": 2,
  "replicas": [
    {
      "count": 2,
      "constraints": {
        "rack": "west"
      }
    }
  ],
  "observers": [
    {
      "count": 2,
      "constraints": {
        "rack": "east"
      }
    }
  ],
  "observerPromotionPolicy":"under-replicated"
}


2. Create the topic

kafka-topics  --create \
	--bootstrap-server broker-west-1:19091 \
	--topic under-replicated-promotion \
	--partitions 1 \
	--replica-placement /etc/kafka/demo/placement-under-replicated-promotion.json \
	--config min.insync.replicas=1

3. Identify the leader

[appuser@broker-west-2 ~]$ kafka-topics --bootstrap-server broker-west-2:19092 --describe --topic under-replicated-promotion
Topic: under-replicated-promotion	PartitionCount: 1	ReplicationFactor: 4	Configs: min.insync.replicas=1,confluent.placement.constraints={"observerPromotionPolicy":"under-replicated","version":2,"replicas":[{"count":2,"constraints":{"rack":"west"}}],"observers":[{"count":2,"constraints":{"rack":"east"}}]}
	Topic: under-replicated-promotion	Partition: 0	Leader: 2	Replicas: 2,1,3,4	Isr: 2,1	Offline: 	Observers: 3,4

4. Stop the one that isn't the leader

docker-compose stop [if Leader=2 then broker-west-1 else broker-west-2]

[appuser@broker-west-2 ~]$ kafka-topics --bootstrap-server broker-west-2:19092 --describe --topic under-replicated-promotion
Topic: under-replicated-promotion	PartitionCount: 1	ReplicationFactor: 4	Configs: min.insync.replicas=1,confluent.placement.constraints={"observerPromotionPolicy":"under-replicated","version":2,"replicas":[{"count":2,"constraints":{"rack":"west"}}],"observers":[{"count":2,"constraints":{"rack":"east"}}]}
	Topic: under-replicated-promotion	Partition: 0	Leader: 2	Replicas: 2,1,3,4	Isr: 2,4	Offline: 1	Observers: 3,4

5. Bring the broker back up 

docker-compose up -d broker-west-1

[appuser@broker-west-2 ~]$ kafka-topics --bootstrap-server broker-west-2:19092 --describe --topic under-replicated-promotion
Topic: under-replicated-promotion	PartitionCount: 1	ReplicationFactor: 4	Configs: min.insync.replicas=1,confluent.placement.constraints={"observerPromotionPolicy":"under-replicated","version":2,"replicas":[{"count":2,"constraints":{"rack":"west"}}],"observers":[{"count":2,"constraints":{"rack":"east"}}]}
	Topic: under-replicated-promotion	Partition: 0	Leader: 2	Replicas: 2,1,3,4	Isr: 2,1	Offline: 	Observers: 3,4


Leader-Is-Observer:

1. Create /multiregion/config/placement-leader-is-observer-promotion.json (/etc/kafka/demo/placement-leader-is-observer-promotion.json):

{
  "version": 2,
  "replicas": [
    {
      "count": 2,
      "constraints": {
        "rack": "west"
      }
    }
  ],
  "observers": [
    {
      "count": 2,
      "constraints": {
        "rack": "east"
      }
    }
  ],
  "observerPromotionPolicy":"leader-is-observer"
}


2. Create the topic

kafka-topics  --create \
	--bootstrap-server broker-west-1:19091 \
	--topic leader-is-observer-promotion \
	--partitions 1 \
	--replica-placement /etc/kafka/demo/placement-leader-is-observer-promotion.json \
	--config min.insync.replicas=1

3. Identify the leader

[appuser@broker-west-2 ~]$ kafka-topics --bootstrap-server broker-west-2:19092 --describe --topic leader-is-observer-promotion
Topic: under-replicated-promotion	PartitionCount: 1	ReplicationFactor: 4	Configs: min.insync.replicas=1,confluent.placement.constraints={"observerPromotionPolicy":"under-replicated","version":2,"replicas":[{"count":2,"constraints":{"rack":"west"}}],"observers":[{"count":2,"constraints":{"rack":"east"}}]}
	Topic: under-replicated-promotion	Partition: 0	Leader: 2	Replicas: 2,1,3,4	Isr: 2,1	Offline: 	Observers: 3,4

4. Stop the one that isn't the leader

docker-compose stop [if Leader=2 then broker-west-1 else broker-west-2]

[appuser@broker-west-1 ~]$ kafka-topics --bootstrap-server broker-west-1:19091 --describe --topic leader-is-observer-promotion
Topic: leader-is-observer-promotion	PartitionCount: 1	ReplicationFactor: 4	Configs: min.insync.replicas=1,confluent.placement.constraints={"observerPromotionPolicy":"leader-is-observer","version":2,"replicas":[{"count":2,"constraints":{"rack":"west"}}],"observers":[{"count":2,"constraints":{"rack":"east"}}]}
	Topic: leader-is-observer-promotion	Partition: 0	Leader: 1	Replicas: 1,2,4,3	Isr: 1	Offline: 2	Observers: 4,3

# note no promotion happens

5. Bring the broker back up 

docker-compose up -d broker-west-2

[appuser@broker-west-1 ~]$ kafka-topics --bootstrap-server broker-west-1:19091 --describe --topic leader-is-observer-promotion
Topic: leader-is-observer-promotion	PartitionCount: 1	ReplicationFactor: 4	Configs: min.insync.replicas=1,confluent.placement.constraints={"observerPromotionPolicy":"leader-is-observer","version":2,"replicas":[{"count":2,"constraints":{"rack":"west"}}],"observers":[{"count":2,"constraints":{"rack":"east"}}]}
	Topic: leader-is-observer-promotion	Partition: 0	Leader: 1	Replicas: 1,2,4,3	Isr: 1,2	Offline: 	Observers: 4,3

